{"categories":[{"title":"技術","uri":"https://aaaaji.github.io/Blog/categories/%E6%8A%80%E8%A1%93/"}],"posts":[{"content":"雖然在 Hugo 的官方文件有寫用 Github 作為 Host 應該怎麼把 Hugo 佈署上去，但實際執行時還是遇到了一點問題，為了避免忘記來做一下紀錄～\n三種 Github pages 頁面型態   Github Pages 提供了3種不同型態的頁面 User / Organization / Project Site\n  用 User / Organization 為主頁一個帳號只能有一個\n顯示網址為 https://\u0026lt;user/organization\u0026gt;.github.io\n  Project 頁面能有很多個\n顯示網址為 https://\u0026lt;user\u0026gt;.github.io/\u0026lt;project-name\u0026gt;\n    而我選用的是用 Project 方式架設\n1. 安裝 Hugo 並建立專案 在安裝完 Hugo 後（待補），直接建立新的專案\n# 建立名為 Blog 的 Hugo 新專案 $ hugo new site Blog # change directory $ cd Blog # git initialized $ git init $ echo .DS_store \u0026gt;\u0026gt; .gitignore # add git remote repository $ git remote add origin git@github.com:\u0026lt;your-github-account\u0026gt;/Blog  2. 安裝新的 Themes 可以到官方提供的 Themes 列表 找到自己喜歡的主題\n建議用 submodule 方式來安裝 themes\n# add hugo themes to project as submodule $ git submodule add https://github.com/xiaoheiAh/hugo-theme-pure themes/pure  3. 編輯設定檔 baseurl: \u0026quot;https://\u0026lt;your-github-account\u0026gt;.github.io/Blog\u0026quot; language: \u0026quot;en-us\u0026quot; title: \u0026quot;Hugo Blog\u0026quot; theme: \u0026quot;pure\u0026quot;  4. 建立新的文章 在 content/posts 建立 first-post.md ，根據使用的 themes 不同，有可能會有所差異\n$ hugo new posts/first-post.md -f yaml  編輯 first-post.md\n--- title: \u0026quot;\u0026lt;your title\u0026gt;\u0026quot; # 是否為草稿 draft: true date: \u0026quot;2020-04-03\u0026quot; tags: [\u0026quot;1st-tag\u0026quot;,\u0026quot;2nd-tag\u0026quot;......] categories: [\u0026quot;1st category\u0026quot;......] --- my first post  5. 預覽 # -w watch filesystem for changes and recreate as needed # -D include content marked as draft # Press Ctrl+C to stop $ hugo server -w  執行後在瀏覽器輸入 localhost:1313/Blog 就會出現目前 Hugo 所產生的網站樣子了\n6. 把 Hugo 靜態網站發布到 Github Pages # remove public folder, it will recreated later $ rm -rf public # add all path and file, and push $ git add . $ git commit -m 'hugo project init' $ git push -u origin master # Create a new orphand branch (no commit history) named gh-pages $ git checkout --orphan gh-pages # Unstage all files # -rf themes/pure $ git rm -rf --cached $(git ls-files) # Add and commit that file $ git add . $ git commit -m \u0026quot;INIT: initial commit on gh-pages branch\u0026quot; # Push to remote gh-pages branch $ git push origin gh-pages # Return to master branch $ git checkout master # Remove the public folder to make room for the gh-pages subtree $ rm -rf public # Add the gh-pages branch of the repository. It will look like a folder named public $ git subtree add --prefix=public git@github.com:\u0026lt;your-github-account\u0026gt;/Blog.git gh-pages --squash # Pull down the file we just committed. This helps avoid merge conflicts $ git subtree pull --prefix=public git@github.com:\u0026lt;your-github-account\u0026gt;/Blog.git gh-pages # Run hugo. Generated site will be placed in public directory (or omit -t ThemeName if you're not using a theme) $ hugo # Add everything $ git add -A # Commit and push to master $ git commit -m \u0026quot;Updating site\u0026quot; \u0026amp;\u0026amp; git push origin master # Push the public subtree to the gh-pages branch $ git subtree push --prefix=public git@github.com:\u0026lt;your-github-account\u0026gt;/Blog.git gh-pages  照著上面一大串慢慢操作就好了，執行完後在瀏覽器輸入 https://.github.io/Blog 應該就能看到了\n7. 更新文章 之後如果有修改只須執行前面的最後3個步驟即可，為了方便可以寫成一個 deploy.sh\n# deploy.sh echo -e \u0026quot;Deploying updates to GitHub ~\u0026quot; # Build the project. hugo # Add changes to git. git add -A # Commit changes. msg=\u0026quot;rebuilding site `date`\u0026quot; if [ $# -eq 1 ] then msg=\u0026quot;$1\u0026quot; fi git commit -m \u0026quot;$msg\u0026quot; # Push source and build repos. git push origin master git subtree push --prefix=public git@github.com:\u0026lt;your-github-account\u0026gt;/Blog.git gh-pages  記得要給該檔案執行權限\n參考來源網站  https://kaichu.io/2015/07/12/my-first-post/  ","id":0,"section":"posts","summary":"雖然在 Hugo 的官方文件有寫用 Github 作為 Host 應該怎麼把 Hugo 佈署上去，但實際執行時還是遇到了一點問題，為了避免忘記來做一下紀錄～ 三種 Github pages 頁面型態 Github Pages 提供了3","tags":["hugo","github"],"title":"用Hugo、Github、Github Pages建立靜態網站","uri":"https://aaaaji.github.io/Blog/2020/04/github_pages_with_hugo/","year":"2020"}],"tags":[{"title":"github","uri":"https://aaaaji.github.io/Blog/tags/github/"},{"title":"hugo","uri":"https://aaaaji.github.io/Blog/tags/hugo/"}]}